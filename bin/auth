#!/usr/bin/env ruby
# frozen_string_literal: true

# Example usage:
#     auth github #=> copies two-factor authentication code for GitHub login to clipboard

require_relative "#{Dir.home}/code/dotfiles/utils/ruby/copy_utils.rb"
require_relative "#{Dir.home}/code/dotfiles/utils/ruby/memoization.rb"

class Authenticator
  include CopyUtils
  prepend Memoization

  BACKUP_CODES_NOT_REQUIRED_SERVICES = [
    'aws', # It seems Amazon doesn't provide backup codes. https://webapps.stackexchange.com/questions/57422/can-i-generate-backup-codes-for-aws-multi-factor-authentication-mfa
  ].freeze

  def copy_auth_code_to_clipboard
    if backup_codes_exist? || BACKUP_CODES_NOT_REQUIRED_SERVICES.include?(service)
      cpp(auth_code)
    else
      puts(AmazingPrint::Colors.red("First, save backup codes at #{backup_codes_path} !"))
    end
  end

  private

  memoize \
  def backup_codes_exist?
    File.exist?(backup_codes_path)
  end

  memoize \
  def backup_codes_path
    "#{Dir.home}/Documents/backup-codes/#{service}.txt"
  end

  memoize \
  def auth_code
    `oathtool --totp -b "#{auth_secret}"`.rstrip
  end

  memoize \
  def auth_secret
    File.read(auth_secret_path).rstrip
  end

  memoize \
  def auth_secret_path
    "#{Dir.home}/Sync/notes/auth-codes/#{service}.txt"
  end

  memoize \
  def service
    ARGV.first.downcase
  end
end

Authenticator.new.copy_auth_code_to_clipboard
