# frozen_string_literal: true

# when cmd-clicking something in iTerm, this opens the file/link/etc with an appropriate program

# rubocop:disable Style/TopLevelMethodDefinition
def debug(message)
  File.write(
    '/Users/david/Downloads/' \
      "iterm_opener-debug-#{Time.now.strftime('%Y-%m-%dT%H:%M:%S.%L%z')}.txt",
    message,
  )
end
# rubocop:enable Style/TopLevelMethodDefinition

# debug(<<~LOG)
#   #{ARGV[0].inspect}
#   #{ARGV[1].inspect}
#   #{ARGV[2].inspect}
# LOG

dir = ARGV[0] # Example: "/Users/david/Downloads"
file_and_line = ARGV[1] # Example: "file.txt:2"

GIT_SHA_REGEX = %r{[a-f0-9]{40}}
cleaned = file_and_line.sub(/^webpack:\/\/\//, '')
cleaned.sub!(/\)$/, '')
cleaned.sub!(%r{\A(a/|b/)}, '')
file = cleaned.split(':').first
absolute_path = "#{dir}/#{file}"

if (
  file_and_line.match?(/\A:::\d{1,4}\z/) &&
    File.exist?((file_location = "#{dir}/tmp/simple_cov/formatter/terminal/target.txt"))
)
  target = File.read(file_location).rstrip
  # debug('open with Sublime')
  system("~/code/dotfiles/bin/subl #{dir}/#{target}:#{file_and_line.sub(':::', '')}")
elsif file_and_line.match?(GIT_SHA_REGEX)
  # debug('open git sha with default browser')
  system(%(open "https://github.com/davidrunger/david_runger/commit/#{file_and_line}"))
elsif file_and_line.start_with?('http')
  # debug('open HTTP url with default browser')
  system("/usr/bin/open #{file_and_line}")
elsif system(%(file #{absolute_path} | grep -q "text"))
  # debug('open absolute_path with Sublime')
  system("~/code/dotfiles/bin/subl #{dir}/#{cleaned}")
elsif system(%(file #{file} | grep -q "text"))
  # debug('open file with Sublime')
  system("~/code/dotfiles/bin/subl #{cleaned}")
else
  # debug('open with default application chosen by MacOS')
  system("/usr/bin/open #{absolute_path}")
end
