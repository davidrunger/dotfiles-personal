#!/usr/bin/env bash

# wait for all expected GitHub checks to pass, then merge the PR

set -euo pipefail # exit on any error, don't allow undefined variables, pass errors through pipes
set -x

GH_CHECKS_BRANCH=$(branch)
export GH_CHECKS_BRANCH
wait-for-gh-checks
gh pr merge "$GH_CHECKS_BRANCH" --squash
say "P R merged"
git fetch --no-tags --quiet origin "$(main-branch):$(main-branch)"

# switch to "safe" branch if still on the local branch that was just merged
if [[ "$(branch)" == "$GH_CHECKS_BRANCH" ]]; then
  safe
else
  update-main-branches
fi

git branch -d "$GH_CHECKS_BRANCH" >/dev/null 2>&1
prune-remote-branches-in-background
echo "----"
git branch -vv
